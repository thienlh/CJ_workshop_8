/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EmployeeManagement.java
 *
 * Created on Mar 31, 2014, 4:51:05 PM
 */

package jtabledemo;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.StringTokenizer;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author thienlh
 */
public class EmployeeManagement extends javax.swing.JFrame {

    /** Creates new form EmployeeManagement */
    String fileName = "employee.dat";
    Vector<String> header = new Vector<String>();
    Vector data = new Vector();
    boolean addNew = false;
    boolean changed = false;    //  Are data changed yet?
    
    public EmployeeManagement() {
        initComponents();
        header.add("ID");
        header.add("Name");
        header.add("Email");
        header.add("Address");
        header.add("Salary");
        loadData();
        DefaultTableModel tblModel;
        tblModel = (DefaultTableModel) this.tblEmployee.getModel();
        tblModel.setDataVector(data, header);
    }
//  Method for loading data into table
    private void loadData() {
        try {
            FileReader fr = new FileReader(fileName);
            BufferedReader br = new BufferedReader(fr);
            String detail = "";
            while ((detail = br.readLine()) != null) {
                StringTokenizer stk = new StringTokenizer(detail, ",");
                String id = stk.nextToken().trim();
                String name = stk.nextToken().trim();
                String email = stk.nextToken().trim();
                String address = stk.nextToken().trim();
                String salary = stk.nextToken().trim();

                Vector row = new Vector();
                row.add(id);
                row.add(name);
                row.add(email);
                row.add(address);
                row.add(salary);
                data.add(row);
            }
            br.close();
            fr.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public boolean valid() {
        String id = this.txtEmpID.getText().trim();
        int[] result = {1, 1, 1, 1, 1};
        //  Check ID box
        if (id.matches("E\\d{3}")) {
            //  Do nothing
        } else {
            this.txtEmpID.requestFocus();
            result[0] = 0;
        }
        //  Check email box
        String email = this.txtEmpEmail.getText().trim();
        if (email.length() > 0 && email.matches("\\w+@\\w+[.]\\w+")) {
            // Do nothing
        } else {
            result[1] = 0;
        }
        //  Check name box
        String name = this.txtEmpName.getText();
        if (name.length() > 0) {
            // Do nothing
        } else {
            result[2] = 0;
        }
        //  Check adrs box
        String adrs = this.txtEmpAdrs.getText();
        if (adrs.length() > 0) {
            // Do nothing
        } else {
            result[3] = 0;
        }
        //  Check salary box
        String salaryStr = this.txtEmpSalary.getText();
        int n = salaryStr.length();
        if (n>0) {
            // Do nothing
        } else {
            result[4] = 0;
        }
        //  All wrong
        if (result[0] == 0 && result[1] == 0 && result[2] == 0 && result[3] == 0 && result[4] == 0) {
            JOptionPane.showMessageDialog(null, "You entered nothing or all of them are invalid!");
        }

        if (result[0] == 0) JOptionPane.showMessageDialog(null, "ID is invalid! (Exxx)");
        if (result[1] == 0) JOptionPane.showMessageDialog(null, "Name can't be empty!");
        if (result[2] == 0) JOptionPane.showMessageDialog(null, "Email is invalid!");
        if (result[3] == 0) JOptionPane.showMessageDialog(null, "Address can't be empty!");
        if (result[4] == 0) JOptionPane.showMessageDialog(null, "Salary can't be negative or larger than 999999999!");
        return result[0] == 1 && result[1] == 1 && result[2] == 1 && result[3] == 1 && result[4] == 1;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmployee = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtEmpID = new javax.swing.JTextField();
        txtEmpName = new javax.swing.JTextField();
        txtEmpEmail = new javax.swing.JTextField();
        txtEmpAdrs = new javax.swing.JTextField();
        txtEmpSalary = new javax.swing.JTextField();
        btnEmpNew = new javax.swing.JButton();
        btnEmpSave = new javax.swing.JButton();
        btnEmpRemove = new javax.swing.JButton();
        btnSave2File = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmployeeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEmployee);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Employee detail"));

        jLabel1.setText("ID:");

        jLabel2.setText("Name:");

        jLabel3.setText("Email:");

        jLabel4.setText("Address:");

        jLabel5.setText("Salary:");

        txtEmpEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmpEmailActionPerformed(evt);
            }
        });

        btnEmpNew.setText("New");
        btnEmpNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmpNewActionPerformed(evt);
            }
        });

        btnEmpSave.setText("Save");
        btnEmpSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmpSaveActionPerformed(evt);
            }
        });

        btnEmpRemove.setText("Remove");
        btnEmpRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmpRemoveActionPerformed(evt);
            }
        });

        btnSave2File.setText("Save to file");
        btnSave2File.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave2FileActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmpSalary, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                            .addComponent(txtEmpName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                            .addComponent(txtEmpEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                            .addComponent(txtEmpAdrs, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                            .addComponent(txtEmpID, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnEmpNew)
                        .addGap(29, 29, 29)
                        .addComponent(btnEmpSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(btnEmpRemove))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnSave2File, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtEmpID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtEmpName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtEmpEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtEmpAdrs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtEmpSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEmpNew)
                    .addComponent(btnEmpRemove)
                    .addComponent(btnEmpSave))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave2File, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        if (changed) {
            int r = JOptionPane.showConfirmDialog(null, "Do you want to save data?", "Confirm", JOptionPane.YES_NO_CANCEL_OPTION);
            if (r == JOptionPane.YES_OPTION) {
                btnSave2FileActionPerformed(null);
            }
        }
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void txtEmpEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmpEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmpEmailActionPerformed

    private void tblEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmployeeMouseClicked
        this.txtEmpID.setEditable(false);
        int pos = this.tblEmployee.getSelectedRow();
        String id = (String) this.tblEmployee.getValueAt(pos, 0);
        String name = (String) this.tblEmployee.getValueAt(pos, 1);
        String email = (String) this.tblEmployee.getValueAt(pos, 2);
        String address = (String) this.tblEmployee.getValueAt(pos, 3);
        String salary = (String) this.tblEmployee.getValueAt(pos, 4);

        this.txtEmpID.setText(id);
        this.txtEmpName.setText(name);
        this.txtEmpEmail.setText(email);
        this.txtEmpAdrs.setText(address);
        this.txtEmpSalary.setText(salary);

        addNew = false;
    }//GEN-LAST:event_tblEmployeeMouseClicked

    private void btnEmpNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmpNewActionPerformed
        addNew = true;
        this.txtEmpID.setText("");
        this.txtEmpID.setEditable(true);
        this.txtEmpID.requestFocus();
        this.txtEmpName.setText("");
        this.txtEmpEmail.setText("");
        this.txtEmpAdrs.setText("");
        this.txtEmpSalary.setText("0");
    }//GEN-LAST:event_btnEmpNewActionPerformed

    private void btnEmpSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmpSaveActionPerformed
    if(!valid())    return;
        String id = txtEmpID.getText();
        String name = txtEmpName.getText();
        String email = txtEmpEmail.getText();
        String address = txtEmpAdrs.getText();
        String salary = txtEmpSalary.getText();

        if (addNew) {
            Vector v = new Vector();
            v.add(id);
            v.add(name);
            v.add(email);
            v.add(address);
            v.add(salary);
            data.add(v);
            addNew = false;
        } else  {
            int pos = tblEmployee.getSelectedRow();
            Vector v = (Vector) data.get(pos);
            v.set(1, name);
            v.set(2, email);
            v.set(3, address);
            v.set(4, salary);
        }
        tblEmployee.updateUI();
        //  Same as add in git
        changed = true;
    }//GEN-LAST:event_btnEmpSaveActionPerformed

    private void btnEmpRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmpRemoveActionPerformed
        //  Get index of a row
        int pos = this.tblEmployee.getSelectedRow();
        int r = JOptionPane.showConfirmDialog(null, "Are your sure want to remove this row?", "Confirm", JOptionPane.YES_NO_OPTION);

        if (r == JOptionPane.YES_OPTION) {
            data.remove(pos);
            this.tblEmployee.updateUI();
        }
    }//GEN-LAST:event_btnEmpRemoveActionPerformed

    private void btnSave2FileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave2FileActionPerformed
        try {
            FileWriter fw = new FileWriter(fileName);
            PrintWriter pw = new PrintWriter(fw);
            for (int i=0; i<data.size(); i++) {
                Vector row = (Vector) data.get(i);
                String detail = row.get(0) + "," + row.get(1) + "," + row.get(2)+ "," + row.get(3) + "," + row.get(4);
                pw.println(detail);
            }
            pw.close();
            fw.close();
            JOptionPane.showMessageDialog(null, "Data saved!");
        } catch (Exception e) {
            e.getStackTrace();
        }
    }//GEN-LAST:event_btnSave2FileActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEmpNew;
    private javax.swing.JButton btnEmpRemove;
    private javax.swing.JButton btnEmpSave;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnSave2File;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblEmployee;
    private javax.swing.JTextField txtEmpAdrs;
    private javax.swing.JTextField txtEmpEmail;
    private javax.swing.JTextField txtEmpID;
    private javax.swing.JTextField txtEmpName;
    private javax.swing.JTextField txtEmpSalary;
    // End of variables declaration//GEN-END:variables

}
